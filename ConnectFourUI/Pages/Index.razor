@page "/"

@using ViewModels;
@using ConnectFourLogic.Helpers;
@using Microsoft.AspNetCore.WebUtilities;
@inject NavigationManager navManager;

<h1>Connect Four</h1>

<EditForm Model="@_player" OnValidSubmit="HandleNewGame">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="name" class="col-sm-1 col-form-label">Name: </label>
        <div class="col-sm-2">
            <InputText id="name" class="form-control" @bind-Value="_player.Name" />
        </div>
    </div>

    <div class="form-group row">
        <label for="color" class="col-sm-1 col-form-label">Color: </label>
        <div class="col-sm-2 input-group">
            <InputText id="color" class="form-control" readonly disabled
                       @bind-Value="_player.Color" style="@colorInputStyle" />
            <div class="input-group-append" @onclick="HandleGenerateColor">
                <div class="input-group-text">
                    <span class="oi oi-reload" aria-hidden="true"></span>
                </div>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">New Game</button>
</EditForm>

@code {
    private PlayerForm _player = new PlayerForm();

    private string colorInputStyle = "";

    protected override void OnInitialized()
    {
        HandleGenerateColor();
    }

    private void HandleGenerateColor()
    {
        _player.Color = ColorHelper.GetRandomColor();
        colorInputStyle = String.Format("background: {0}", _player.Color);
    }

    private void HandleNewGame()
    {
        var query = new Dictionary<string, string> {
            { "name", this._player.Name }, { "color", this._player.Color } };

        navManager.NavigateTo(QueryHelpers.AddQueryString("play", query));
    }
}
